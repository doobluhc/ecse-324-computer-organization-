	.text 
	.equ HEX_BASE1, 0xFF200020
	.equ HEX_BASE2, 0xFF200030
	.global HEX_clear_ASM
	.global HEX_flood_ASM
	.global HEX_write_ASM

HEX_flood_ASM: 
	PUSH {R1-R6,LR}
	LDR R1, =HEX_BASE1
	LDR R2, =HEX_BASE2
	MOV R3,#0
flood_loop: 
	CMP R3,#6
	BEQ flood_done
	AND R4,R0,#1
	CMP R4,#1
	BLEQ flood
	LSR R0,#1
	ADD R3,R3,#1
	B flood_loop
flood: 
	PUSH {R1-R6,LR}
	CMP R3,#0
	LDREQ R5,[R1]
	ORREQ R5,R5,#0X7F
	STREQ R5,[R1]
	CMP R3,#1
	LDREQ R5,[R1]
	ORREQ R5,R5,#0X7F00
	STREQ R5,[R1]
	CMP R3,#2
	LDREQ R5,[R1]
	ORREQ R5,R5,#0X7F0000
	STREQ R5,[R1]
	CMP R3,#3
	LDREQ R5,[R1]
	ORREQ R5,R5,#0X7F000000
	STREQ R5,[R1]
	CMP R3,#4
	LDREQ R6,[R2]
	ORREQ R6,R6,#0X7F
	STREQ R6,[R2]
	CMP R3,#5
	LDREQ R6,[R2]
	ORREQ R6,R6,#0X7F00
	STREQ R6,[R2]
	POP {R1-R6,LR}
	BX LR
flood_done: 
	POP {R1-R6,LR}
	BX LR


HEX_clear_ASM: 
	PUSH {R1-R6,LR}
	LDR R1, =HEX_BASE1
	LDR R2, =HEX_BASE2
	MOV R3,#0
clear_loop: 
	CMP R3,#6
	BEQ clear_done
	AND R4,R0,#1
	CMP R4,#1
	BLEQ clear
	LSR R0,#1
	ADD R3,R3,#1
	B clear_loop
clear: 
	PUSH {R1-R6,LR}
	CMP R3,#0
	LDREQ R5,[R1]
	ANDEQ R5,R5,#0XFFFFFF80
	STREQ R5,[R1]
	CMP R3,#1
	LDREQ R5,[R1]
	ANDEQ R5,R5,#0XFFFF80FF
	STREQ R5,[R1]
	CMP R3,#2
	LDREQ R5,[R1]
	ANDEQ R5,R5,#0XFF80FFFF
	STREQ R5,[R1]
	CMP R3,#3
	LDREQ R5,[R1]
	ANDEQ R5,R5,#0X80FFFFFF
	STREQ R5,[R1]
	CMP R3,#4
	LDREQ R6,[R2]
	ANDEQ R6,R6,#0XFFFFFF80
	STREQ R6,[R2]
	CMP R3,#5
	LDREQ R6,[R2]
	ANDEQ R6,R6,#0XFFFF80FF
	STREQ R6,[R2]
	POP {R1-R6,LR}
	BX LR
clear_done: 
	POP {R1-R6,LR}
	BX LR
	
HEX_write_ASM:
	PUSH {R1-R6,LR}
	LDR R2, =HEX_BASE1
	LDR R3, =HEX_BASE2
	MOV R4,#0				// R4 IS THE COUNTER
write_loop: 
	CMP R4,#6
	BEQ write_done
	AND R5,R0,#1
	CMP R5,#1
	BLEQ write
	LSR R0,#1
	ADD R4,R4,#1
	B write_loop
write: 
	PUSH {R1-R5,LR}
	CMP R4,#0
	LDREQ R6,[R2]
	BLEQ write_number
	CMP R4,#0
	LSLEQ R6,#0
	LDREQ R7,[R2]
	ORREQ R6,R6,R7
	STREQ R6, [R2]
	CMP R4,#1
	LDREQ R6,[R2]
	BLEQ write_number
	CMP R4,#1
	LSLEQ R6,#8
	LDREQ R7,[R2]
	ORREQ R6,R6,R7
	STREQ R6, [R2]
	CMP R4,#2
	LDREQ R6,[R2]
	BLEQ write_number
	CMP R4,#2
	LSLEQ R6,#16
	LDREQ R7,[R2]
	ORREQ R6,R6,R7
	STREQ R6, [R2]
	CMP R4,#3
	LDREQ R6,[R2]
	BLEQ write_number
	CMP R4,#3
	LSLEQ R6,#24
	LDREQ R7,[R2]
	ORREQ R6,R6,R7
	STREQ R6, [R2]
	CMP R4,#4
	LDREQ R6,[R3]
	BLEQ write_number
	CMP R4,#4
	LSLEQ R6,#0
	LDREQ R7,[R3]
	ORREQ R6,R6,R7
	STREQ R6, [R3]
	CMP R4,#5
	LDREQ R6,[R3]
	BLEQ write_number
	CMP R4,#5
	LSLEQ R6,#8
	LDREQ R7,[R3]
	ORREQ R6,R6,R7
	STREQ R6, [R3]
	POP {R1-R5,LR}
	BX LR

write_number: 
	PUSH {R2-R5,LR}
	CMP R1,#0
	MOVEQ R6,#0X3F
	CMP R1,#1
	MOVEQ R6,#0X6
	CMP R1,#2
	MOVEQ R6,#0X5B
	CMP R1,#3
	MOVEQ R6,#0X4F
	CMP R1,#4
	MOVEQ R6,#0X66
	CMP R1,#5
	MOVEQ R6,#0X6D	
	CMP R1,#6
	MOVEQ R6,#0X7D
	CMP R1,#7
	MOVEQ R6,#0X7
	CMP R1,#8
	MOVEQ R6,#0X7F
	CMP R1,#9
	MOVEQ R6,#0X6F
	CMP R1,#10
	MOVEQ R6,#0X77
	CMP R1,#11
	MOVEQ R6,#0X7C
	CMP R1,#12
	MOVEQ R6,#0X39
	CMP R1,#13
	MOVEQ R6,#0X5E
	CMP R1,#14
	MOVEQ R6,#0X79
	CMP R1,#15
	MOVEQ R6,#0X71
	POP {R2-R5,LR}
	BX LR
write_done: 
	POP {R1-R6,LR}
	BX LR	

.END


